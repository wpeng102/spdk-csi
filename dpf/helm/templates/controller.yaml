# SPDX-License-Identifier: Apache-2.0
# Copyright (c) Arm Limited and Contributors
# Copyright (c) Intel Corporation
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: spdkcsi-controller
  namespace: {{ .Release.Namespace }}
{{ include "spdk.labels" . | indent 2 }}
spec:
  serviceName: spdkcsi-controller
  replicas: {{ .Values.controller.replicas }}
  selector:
    matchLabels:
      app: spdkcsi-controller
  template:
    metadata:
{{ include "spdk.labels" . | indent 6 }}
        app: spdkcsi-controller
    spec:
      hostNetwork: true
      containers:
      - name: spdkcsi-provisioner
        image: "{{ .Values.image.csiProvisioner.repository }}:{{ .Values.image.csiProvisioner.tag }}"
        imagePullPolicy: {{ .Values.image.csiProvisioner.pullPolicy }}
        args:
        - "--v=5"
        - "--csi-address=unix:///csi/csi-provisioner.sock"
        - "--timeout=30s"
        - "--retry-interval-start=500ms"
        - "--leader-election=true"
        - "--leader-election-namespace=dpf-operator-system"
        env:
        - name: KUBERNETES_SERVICE_HOST
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.dpuClusterSecret }}"
              key: KUBERNETES_SERVICE_HOST
        - name: KUBERNETES_SERVICE_PORT
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.dpuClusterSecret }}"
              key: KUBERNETES_SERVICE_PORT
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
        - name: tokenfile
          mountPath: "/var/run/secrets/kubernetes.io/serviceaccount"
          readOnly: true
      - name: spdkcsi-controller
        image: "{{ .Values.image.spdkcsi.repository }}:{{ .Values.image.spdkcsi.tag }}"
        imagePullPolicy: {{ .Values.image.spdkcsi.pullPolicy }}
        args:
        - "--v=5"
        - "--endpoint=unix:///csi/csi-provisioner.sock"
        - "--nodeid=$(NODE_ID)"
        - "--controller"
        env:
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: KUBERNETES_SERVICE_HOST
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.dpuClusterSecret }}"
              key: KUBERNETES_SERVICE_HOST
        - name: KUBERNETES_SERVICE_PORT
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.dpuClusterSecret }}"
              key: KUBERNETES_SERVICE_PORT
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
        - name: spdkcsi-config
          mountPath: /etc/spdkcsi-config/
          readOnly: true
        - name: tokenfile
          mountPath: "/var/run/secrets/kubernetes.io/serviceaccount"
          readOnly: true
      - name: spdkcsi-snapshotter
        image: "{{ .Values.image.csiSnapshotter.repository }}:{{ .Values.image.csiSnapshotter.tag }}"
        args:
          - "--csi-address=unix:///csi/csi-provisioner.sock"
          - "--v=5"
          - "--timeout=150s"
          - "--leader-election=true"
          - "--leader-election-namespace=dpf-operator-system"
        imagePullPolicy: {{ .Values.image.csiSnapshotter.pullPolicy }}
        env:
        - name: KUBERNETES_SERVICE_HOST
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.dpuClusterSecret }}"
              key: KUBERNETES_SERVICE_HOST
        - name: KUBERNETES_SERVICE_PORT
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.dpuClusterSecret }}"
              key: KUBERNETES_SERVICE_PORT
        securityContext:
          privileged: true
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
        - name: tokenfile
          mountPath: "/var/run/secrets/kubernetes.io/serviceaccount"
          readOnly: true
      volumes:
      - name: socket-dir
        emptyDir:
          medium: "Memory"
      - name: spdkcsi-config
        configMap:
          name: spdkcsi-cm
      - name: tokenfile
        projected:
          sources:
          - secret:
              name: "{{ .Values.dpuClusterSecret }}"
              items:
              - key: TOKEN_FILE
                path: token
          - secret:
              name: "{{ .Values.dpuClusterSecret }}"
              items:
              - key: KUBERNETES_CA_DATA
                path: ca.crt
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations | default list }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
